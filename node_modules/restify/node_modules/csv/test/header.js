// Generated by CoffeeScript 1.7.1

/*
Test CSV - Copyright David Worms <open@adaltas.com> (BSD Licensed)
 */

(function() {
  var csv, fs, should;

  fs = require('fs');

  should = require('should');

  csv = process.env.CSV_COV ? require('../lib-cov') : require('../src');

  describe('header', function() {
    it('should print headers with defined write columns', function(next) {
      return csv().from.string("20322051544,1979,8.8017226E7,ABC,45,2000-01-01\n28392898392,1974,8.8392926E7,DEF,23,2050-11-27").on('end', function(count) {
        return count.should.eql(2);
      }).to.string(function(result) {
        result.should.eql("FIELD_1,FIELD_2\n20322051544,1979\n28392898392,1974");
        return next();
      }, {
        header: true,
        columns: ["FIELD_1", "FIELD_2"]
      });
    });
    it('should print headers with true read columns and defined write columns', function(next) {
      return csv().from.string("FIELD_1,FIELD_2,FIELD_3,FIELD_4,FIELD_5,FIELD_6\n20322051544,1979,8.8017226E7,ABC,45,2000-01-01\n28392898392,1974,8.8392926E7,DEF,23,2050-11-27", {
        columns: true
      }).to.string(function(result) {
        result.should.eql("FIELD_1,FIELD_2\n20322051544,1979\n28392898392,1974");
        return next();
      }, {
        header: true,
        columns: ["FIELD_1", "FIELD_2"]
      });
    });
    return it('should print headers if no records to parse', function(next) {
      return csv().from.array([]).to.string(function(data) {
        return data.should.eql('some,headers');
      }, {
        header: true,
        columns: ['some', 'headers']
      }).on('end', function(count) {
        count.should.eql(0);
        return next();
      });
    });
  });

}).call(this);

//# sourceMappingURL=header.map
